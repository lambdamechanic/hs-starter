name: CI

on:
  push:
    branches: [main]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install PostgreSQL client tools
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql libpq-dev

      - id: setup
        name: Setup GHC and Cabal
        uses: haskell-actions/setup@v2
        with:
          ghc-version: "9.8.4"
          cabal-version: "3.12.1.0"

      - name: Cache cabal store
        uses: actions/cache@v4
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: cabal-${{ runner.os }}-${{ steps.setup.outputs.ghc-version }}-${{ hashFiles('cabal.project', 'hs-starter.cabal') }}
          restore-keys: |
            cabal-${{ runner.os }}-${{ steps.setup.outputs.ghc-version }}-
            cabal-${{ runner.os }}-

      - name: Update package index
        run: cabal update

      - name: Build
        run: cabal build all

      - name: Test with coverage
        run: |
          export PATH="$(pg_config --bindir):$PATH"
          # Ensure .tix files land in a predictable location
          export HPCTIXDIR="$(pwd)/dist-newstyle"
          which cabal
          cabal --version
          ghc --version
          UNIT_LIB_ID=$(jq -r '."install-plan"[] | select(."pkg-name" == "hs-starter" and ."component-name" == "lib") | ."id"' dist-newstyle/cache/plan.json)
          UNIT_TEST_ID=$(jq -r '."install-plan"[] | select(."pkg-name" == "hs-starter" and (."component-name" | startswith("test:"))) | ."id"' dist-newstyle/cache/plan.json)
          if cabal test --help | grep -q -- "--coverage-for"; then
            echo "Using cabal --coverage-for=${UNIT_LIB_ID} and test=${UNIT_TEST_ID}"
            cabal test --enable-coverage --enable-per-component \
              --coverage-for="${UNIT_LIB_ID}" \
              --coverage-for="${UNIT_TEST_ID}" \
              --test-show-details=streaming
          else
            echo "cabal does not support --coverage-for; using legacy coverage flags"
            cabal test --enable-coverage --enable-per-component --test-show-details=streaming
          fi

      - name: Check coverage ratchet
        run: ./scripts/check-coverage.sh
